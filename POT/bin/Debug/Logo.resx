<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LogoPicture" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAABkCAIAAABM5OhcAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAAA9ZJREFUeF7t29F1ozAQheHURUGux9W4GYpJhI0lARKSx7qKDuf/3nbDEM3MxZs9
        y/78AgIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIE
        CxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxIECxKaYM3z436b
        punHm6bb/THP69ez1sK1yHE3WQrXL2fYqjpxZ1tPNt0rTnSVCTQP1uwaXJtLmG6P9bqjs0o3pcyQbFWd
        zI/4cMVgXWkCjYM1v59Oxz0zL9u20+PdFd4fCzexqDaRSVtVH9tQLc6DdbEJCIK1tLefoJvy2qZzHHA0
        ntu+NtrPbkS2qh62635v+SxYV5tAxx/eo2jtG/VfKn2abb5uq9KLtu3+5J/Dr0/Oca0JLPoFK0rWrs/C
        fOIJRZG0VXXwOpj73F6PVRGsi01g0TFYoc3tICoGn5iQrSotbCh5YcW3irm/oG1+FiiX23qxVfXy/59Y
        Vc0fHk5bVU642/F2Xy/H3yB3ihEm0Fy/YIVBbJsszn1xuMhWlZc7XViNMVYVp7D1YqvqpluwfIv7Hqs2
        F6rXq2xVZ5IHbPHEF5c7ygSa6hUsP4bDeMcZ6+GM/je+iBXBUjqsLDLSWMM5b4+5GIhKxfuMNIFmegQr
        rCs12rHGGs769mWsCJZIaC3T22hj3UXrg8oMfwqC1UzoK//g+wGdfTQclmOrqrJJVoN9FE8x3ARaEAbL
        N+XaOtlPuOzkIj/F9zW2qgrRqZ++30hxuYNNoA1ZsHxLxab8lfkdJnZjqyoJJeGljPrqtPIxRppAK5pg
        ffQv67777LWp+diqzm0rwnf4bi3lc9h6sVX1IghWaLiyoVCQvj79aNqqThwX5W9RfY+UivUOMoGWWgcr
        evHqg3ZOiqIb7h9MW1XGMVaLj2+TUBGsISbQVttghe24Vtf3R9N2r6XFhcsbJ4k3IRPjsVWlhDvtN2TZ
        z/w8x5s7z+sG7xc8V2NNoLW2wQpbKDk+vZsZ7TxfmEuyVe35cyc+VKLvULejsyPFDnf7zwk0p/vEOpfY
        oPP6vybRPZ6vcZf+c4+tKvCnTh8q6ipzwVblEEaagIDgh3eAYEGEYEGCYEGCYEGCYEGCYEGCYEGCYEGC
        YEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGC
        YEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEGCYEHg9/cPLpCCLwjadMcAAAAASUVORK5CYII=
</value>
  </data>
</root>